{"version":3,"sources":["components/ContactList/styles/contactList.module.scss","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Modal/Modal.js","App.js","index.js","components/ContactForm/styles/contactForm.module.scss","components/Filter/styles/filter.module.scss","components/Modal/styles/modal.module.scss"],"names":["module","exports","Filter","value","onChange","className","style","filterLabel","type","name","filterInput","ContactForm","onSubmit","useState","setName","number","setNumber","resetForm","e","preventDefault","contact","id","uuidv4","form","formLabel","currentTarget","pattern","title","required","formInput","ContactList","contacts","onDelete","map","contactList_item","onClick","modalRoot","document","querySelector","Modal","children","onClose","closeModalEscape","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","Modal__backdrop","target","Modal__content","App","setContacts","showModal","setShowModal","filter","setFilter","getContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","toggleModal","normalizeFilter","toLowerCase","visibleFilter","includes","cloneName","find","alert","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c9c6f52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList_item\":\"contactList_contactList_item__2clu3\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport style from './styles/filter.module.scss';\n\nconst Filter =({value,onChange}) => (\n\n    <label className={style.filterLabel}>\n        Find contacts by name\n        <input type='text' name='filter' value={value} onChange={onChange} className={style.filterInput}/>\n    </label>\n)\n\nFilter.propTypes={\n    value:PropTypes.string\n}\n\nexport default Filter;","import React, {useState} from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\nimport style from './styles/contactForm.module.scss';\n\nexport default function ContactForm({onSubmit})  {\n\n    const [name,setName]=useState('');\n    const [number,setNumber]=useState('')\n\n\n\n    const  handleChangeName = (e) => {\n        setName(e.currentTarget.value);\n    }\n\n    const  handleChangeNumber = (e) => {\n        setNumber(e.currentTarget.value)\n    }\n\n    const handleSubmit =(e) => {\n        e.preventDefault();\n\n        const contact = {\n            id:uuidv4(),\n            name,\n            number\n        }\n\n     onSubmit(contact);\n        resetForm()\n\n    }\n\n    const resetForm =() => {\n        setName('');\n        setNumber('');\n    }\n\n\n\n    return (\n        <form onSubmit={handleSubmit} className={style.form}>\n            <label className={style.formLabel}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChangeName}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    className={style.formInput}\n                />\n            </label>\n            <label className={style.formLabel}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChangeNumber}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    className={style.formInput}\n                />\n            </label>\n            <button type='submit'>Add contact</button>\n        </form>\n\n    )\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport style from './styles/contactList.module.scss'\n\nconst ContactList = ({contacts,onDelete}) => {\n    return (\n        <ul>\n            {contacts.map(({id,name,number})=> (\n\n                <li key={id} className={style.contactList_item}>{name}: {number} <button onClick={() => onDelete(id)}>Delete</button></li>\n\n            ))}\n        </ul>\n    )\n}\n\nContactList.propTypes={\n    contacts:PropTypes.arrayOf(PropTypes.shape({\n        id:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired,\n        number:PropTypes.string.isRequired\n    })).isRequired\n}\n\nexport default ContactList;","import React, {useCallback, useEffect} from \"react\";\nimport {createPortal} from 'react-dom';\nimport style from './styles/modal.module.scss';\n\n\nconst modalRoot=document.querySelector('#modal-root')\n\nexport default function Modal({children,onClose}){\n\n    const closeModalEscape =useCallback((e) => {\n        if (e.code === \"Escape\") {\n            onClose();\n        }\n    },[onClose])\n\n\n    useEffect(()=> {\n        window.addEventListener('keydown', closeModalEscape);\n        return () =>{\n            window.removeEventListener('keydown', closeModalEscape)\n        }\n    },[closeModalEscape]);\n\n\n    const closeClickModal=(e) => {\n        if(e.target === e.currentTarget) {\n            onClose();\n        }\n    }\n\n        return createPortal(<div className={style.Modal__backdrop} onClick={closeClickModal}>\n            <div className={style.Modal__content}>{children}</div>\n        </div>,modalRoot)\n}\n","import React, {useEffect, useState} from \"react\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Modal from \"./components/Modal\";\n\nexport default function App(){\n\n    const [contacts,setContacts]=useState([{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},]);\n    const [showModal,setShowModal]=useState(false);\n    const [filter,setFilter]=useState('');\n\n    useEffect(()=> {\n        const getContacts=localStorage.getItem('contacts');\n        const parsedContacts=JSON.parse(getContacts);\n        if(parsedContacts) {\n            setContacts(parsedContacts)\n            }\n    },[])\n\n    useEffect(() => {\n        localStorage.setItem('contacts',JSON.stringify(contacts))\n\n    },[contacts])\n\n\n    const handleFilter =(e) => {\n        setFilter(e.currentTarget.value);\n\n    }\n\n   const addContact = (contact) => {\n        const cloneName=contacts.find(({name}) => name === contact.name);\n        if(cloneName) {\n            const {name} =cloneName;\n            alert(`${name} is already in contacts`);\n            return;\n        }\n        setContacts([contact,...contacts])\n        toggleModal();\n    }\n\n   const deleteContact =(id) => {\n\n        setContacts(contacts.filter(contact => contact.id !== id))\n\n\n    }\n\n   const toggleModal =() => {\n        setShowModal(!showModal);\n\n    }\n\n\n        const normalizeFilter=filter.toLowerCase();\n        const visibleFilter = contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter));\n\n        return (\n            <div>\n                <button type='button' onClick={toggleModal}>Add contact</button>\n                <h1>Phonebook</h1>\n                <h2>Contacts</h2>\n                <Filter value={filter} onChange={handleFilter}/>\n                <ContactList contacts={visibleFilter} onDelete={deleteContact}/>\n                {showModal && <Modal onClose={toggleModal}><ContactForm onSubmit ={addContact}/></Modal>}\n            </div>\n        )\n    }\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__Xf3UP\",\"formInput\":\"contactForm_formInput__1NWn0\",\"formLabel\":\"contactForm_formLabel__2YvUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"filter_filterInput__C1Cdi\",\"filterLabel\":\"filter_filterLabel__7T-pT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"modal_Modal__backdrop__1jJ6y\",\"Modal__content\":\"modal_Modal__content__fz9pQ\"};"],"sourceRoot":""}